#!/usr/bin/env bash

GITSH_DOWNLOAD_URL="https://github.com/thoughtbot/gitsh/releases/download"
PARITY_DOWNLOAD_URL="https://github.com/thoughtbot/parity/archive"
RCM_DOWNLOAD_URL="https://thoughtbot.github.io/rcm/dist"

release_update() {
  cd $PACKAGE
	dch -v "${VERSION}-1" -U "New upstream release ${VERSION}"
	dch -r "" -D unstable
  git commit -am "Release $PACKAGE v$VERSION"
}

release_build() {
  mkdir -p deb-build
  wget -O deb-build/${PACKAGE}_${VERSION}.orig.tar.gz  "$(download_url)"
  tar -C deb-build -xf deb-build/${PACKAGE}_${VERSION}.orig.tar.gz
  cp ${PACKAGE}/debian deb-build/${PACKAGE}-${VERSION} -r
  cd deb-build/${PACKAGE}-${VERSION}
  debuild -F
}

release_push() {
  git push
}

release_clean() {
  rm -rf deb-build
}

release_reset() {
  release_clean
  git reset --hard origin/master
}

release_package() {
  release_clean
  release_update
  release_build
}

download_url() {
  case $PACKAGE in
    "rcm"*)
      echo "$RCM_DOWNLOAD_URL/rcm-$VERSION.tar.gz"
      ;;
    "parity"*)
      echo "$PARITY_DOWNLOAD_URL/$VERSION.tar.gz"
      ;;
    "gitsh"*)
      echo "$GITSH_DOWNLOAD_URL/v$VERSION/gitsh-$VERSION.tar.gz"
      ;;
  esac
}

verb="$1"
PACKAGE="$2"
VERSION="$3"
cmd="release_${verb}"

set -x

${cmd}
